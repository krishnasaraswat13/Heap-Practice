//k closest elements

class Solution {
    int[] printKClosest(int[] arr, int k, int x) {
        // code here
        PriorityQueue<int []>pq=new PriorityQueue<>((a,b)->b[0]==a[0]?a[1]-b[1]:b[0]-a[0]);//a1-b1 bcz prefer larger if same but in platform like leetcode we need to prefer smaller so in those cases take b1-a1
        for(int i=0;i<arr.length;i++){
            if(arr[i]==x){
                continue;
            }
            int dis=Math.abs(arr[i]-x);
            pq.add(new int[]{dis,arr[i]});
            if(pq.size()>k){
                pq.poll();
            }
        }
        int res[]=new int[k];
        int ind=0;
        while(pq.size()>0){
            res[ind++]=pq.poll()[1];
        }
    
    for (int i = 0; i < k / 2; i++) {
        int temp = res[i];
        res[i] = res[k - i - 1];
        res[k - i - 1] = temp;
    }
    return res;
}
}
