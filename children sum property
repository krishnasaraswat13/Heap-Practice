/*
class Node{
    int data;
    Node left,right;

    Node(int key)
    {
        data = key;
        left = right = null;
    }
}
*/
class Solution {
    public boolean isSumProperty(Node root) {
        //  code here
          if (root ==null || (root.left ==null && root.right ==null)) {
            return true;
        }

        int leftVal = (root.left!=null ? root.left.data : 0);
        int rightVal = (root.right!=null ? root.right.data : 0);

        if (root.data == leftVal + rightVal
            && isSumProperty(root.left)
            && isSumProperty(root.right)) {
            return true;
        }
        return false;
    }
}
//this is only for check of children sum property that if child nodes value sum
//  equal to root value  and in another ques we will make that type of tree

public static void changeTree(BinaryTree<Integer> root)
if(root==null){
    return;
}
int child=0;
if(root.left!=null){
    child+=root.left.data;
}
if(root.right!=null){
    child+=root.right.data;
}
if(child>=root.data){
    root.data=child;
}
else{
    if(root.left!=null){
        root.left.data=root.data;
    }
    if(root.right!=null){
        root.right.data=root.data;
    }
}
changeTree(root.left);
changeTree(root.right);
int tot=0;
if(root.left!=null){
    tot+=root.left.data;
}
if(root.right!=null){
    tot+=root.right.data;
}
if(root.left!=null || root.right!=null){
    root.data=tot;
}